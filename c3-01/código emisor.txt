#include <Arduino.h> 
#include <esp_now.h>  // Librería para comunicación ESP-NOW
#include <WiFi.h>     // Librería WiFi para ESP32

#define INPUT_POTENCIOMETRO 32   // GPIO32
#define BAUD_RATE 115200         // Frecuencia de baudios

float ADC_VOLT_MAX = 3.3;
int RESOLUCION = 12; 

uint8_t broadcastAddress[] = {0xCC, 0xDB, 0xA7, 0x3E, 0x5B, 0xB8}; // Dirección MAC de broadcast (todos los dispositivos)

typedef struct struct_message {
  float ADC_VOLT;     
} struct_message;

struct_message myData;
esp_now_peer_info_t peerInfo;

// Callback
void OnDataSent(const uint8_t *mac_addr, esp_now_send_status_t status) {
  Serial.print("\r\nEstado del último envío:\t");
  Serial.println(status == ESP_NOW_SEND_SUCCESS ? "Entrega exitosa" : "Fallo en entrega");
}

void setup() {
  Serial.begin(BAUD_RATE);
  pinMode(INPUT_POTENCIOMETRO, INPUT);
  analogReadResolution(RESOLUCION);  // Establecer resolución a 12 bits
  analogSetAttenuation(ADC_11db);  // Ajustar la atenuación para leer hasta 3.3V

  WiFi.mode(WIFI_STA);

  // Inicializar ESP-NOW
  if (esp_now_init() != ESP_OK) {
    Serial.println("Error al inicializar ESP-NOW");
    return;
  }

  esp_now_register_send_cb(OnDataSent);

  // Configurar el peer receptor
  memcpy(peerInfo.peer_addr, broadcastAddress, 6);
  peerInfo.channel = 0;
  peerInfo.encrypt = false;

  if (esp_now_add_peer(&peerInfo) != ESP_OK) {
    Serial.println("Error al añadir el receptor");
    return;
  }
}

void loop() {
  // Leer ADC para obtener voltaje
  float ADC_VOLT = (analogRead(INPUT_POTENCIOMETRO) / 4095.0) * ADC_VOLT_MAX;  // 12 bits = 0 a 4095

  Serial.print("ADC volt: ");
  Serial.println(ADC_VOLT);

  // Asignar el valor al mensaje
  myData.ADC_VOLT = ADC_VOLT;

  // Enviar por ESP-NOW
  esp_err_t result = esp_now_send(broadcastAddress, (uint8_t *)&myData, sizeof(myData));

  if (result == ESP_OK) {
    Serial.println("Datos enviados con éxito");
  } else {
    Serial.println("Error al enviar los datos");
  }

  delay(500); 
}
